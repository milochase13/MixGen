{"ast":null,"code":"var _jsxFileName = \"/Users/milochase/Desktop/playlist-generator/playlist-generator-app/frontend/src/features/confirmation/Checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../../checklist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = () => {\n  _s();\n  const [checklist, setChecklist] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [confirmed, setConfirmed] = useState(false);\n  useEffect(() => {\n    fetch('/api/checklist').then(response => response.json()).then(data => {\n      setChecklist(Object.keys(data));\n      setCheckedItems(data);\n    });\n  }, []);\n  const handleCheckboxChange = item => {\n    const updatedCheckedItems = {\n      ...checkedItems\n    };\n    updatedCheckedItems[item] = !checkedItems[item];\n    setCheckedItems(updatedCheckedItems);\n    axios.post('/api/update-checklist', {\n      checklist: updatedCheckedItems\n    }).then(response => {\n      // Handle success if necessary\n    }).catch(error => {\n      // Handle error if necessary\n    });\n  };\n  const handleConfirm = item => {\n    axios.post('/api/confirm-checklist').then(response => {\n      setConfirmed(true);\n    }).catch(error => {\n      // Handle error if necessary\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"TEST\"), !confirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header\",\n        children: \"Here is your AI generated playlist! Finalize it by choosing which songs to keep:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"form-confirm\",\n        children: checklist.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedItems[item],\n            onChange: () => handleCheckboxChange(item),\n            id: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: item,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this), confirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your playlist has been created!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Checklist, \"ITPedQNKkt7/RBcyN9VJJnGulFk=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Checklist","_s","checklist","setChecklist","checkedItems","setCheckedItems","confirmed","setConfirmed","fetch","then","response","json","data","Object","keys","handleCheckboxChange","item","updatedCheckedItems","post","catch","error","handleConfirm","children","console","log","class","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","id","for","onClick","_c","$RefreshReg$"],"sources":["/Users/milochase/Desktop/playlist-generator/playlist-generator-app/frontend/src/features/confirmation/Checklist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../../checklist.css'\n\nconst Checklist = () => {\n  const [checklist, setChecklist] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  const [confirmed, setConfirmed] = useState(false);\n\n  useEffect(() => {\n    fetch('/api/checklist')\n      .then(response => response.json())\n      .then(data => {\n        setChecklist(Object.keys(data));\n        setCheckedItems(data);\n      });\n  }, []);\n\n  const handleCheckboxChange = (item) => {\n    const updatedCheckedItems = { ...checkedItems };\n    updatedCheckedItems[item] = !checkedItems[item];\n    setCheckedItems(updatedCheckedItems);\n\n    axios.post('/api/update-checklist', { checklist: updatedCheckedItems })\n      .then(response => {\n        // Handle success if necessary\n      })\n      .catch(error => {\n        // Handle error if necessary\n      });\n  };\n\n  const handleConfirm = (item) => {\n    axios.post('/api/confirm-checklist')\n      .then(response => {\n        setConfirmed(true)\n      })\n      .catch(error => {\n        // Handle error if necessary\n      });\n  };\n\n  return (\n    <div>\n        {console.log(\"TEST\")}\n        {!confirmed && <div>\n            <div class=\"header\">\n                Here is your AI generated playlist! Finalize it by choosing which songs to keep:\n            </div>\n            <form class=\"form-confirm\">\n            {checklist.map(item => (\n                <div key={item} class=\"inputGroup\">\n                <input\n                    type=\"checkbox\"\n                    checked={checkedItems[item]}\n                    onChange={() => handleCheckboxChange(item)}\n                    id={item}\n                />\n                <label for={item}>{item}</label>\n                </div>\n            ))}\n            </form>\n            <div>\n                <button onClick={handleConfirm}>\n                    Confirm\n                </button>\n            </div>\n        </div>\n        }\n        {confirmed && <div>\n            <p>\n            Your playlist has been created!\n            </p>\n        </div>}\n    </div>\n  );\n};\n\nexport default Checklist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}